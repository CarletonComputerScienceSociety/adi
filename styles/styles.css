/*
 * Howdy, this is the reference stylesheet for the responsive version of the site.
 * We'll be working backwards, since the initial version of the site was not responsive nor mobile-first.
 * First we comment out the 2000px widths.
 * Then we change the sizes to relative units.
 * Then we add the grid layout.
 * Then we add the media queries.
*/

body{
    margin: 0;
    font-family: sans-serif;
}
header{
    background-image: url('../images/background.jpg');
    background-attachment: fixed;
    background-size: cover;
    text-align: center; 
    /* width: 2000px; */
}
#text{
    /* width: 1000px; */
    /* width: 50%;  initially add this then change with media queries*/
    width: 100%;
    background: #B1D4E0;
    padding-top: 400px;
    padding-bottom: 375px;
    opacity: 0.8;
}
#items{
    background-image: url('../images/items.jpg');
    background-attachment: fixed;
    background-size: cover;
    /* width: 2000px; */
    margin: auto;
    display: grid; /*added*/
    grid-gap: 20px;
    padding-top: 20px;
}

#items > div{
    background-color: white;
    opacity: 0.8;
    /* display: inline-block;
    width: 500px;
    margin: 10px; */
    padding: 20px;
    text-align: center;
}

button{
    background-color: transparent;
    border: solid 4px black;
    padding: 10px;
    border-radius: 10px;
    cursor: pointer;
}

/* button:hover{
    background-color: black;
    color: white;
    transition: all 0.7s;
} */ /* moved to media query*/

img{
    width: 100px;
    height: 100px;
}

/* all added*/
/* notice the order (smallest to largest)
    this is important for the cascading nature of CSS
    if we had the largest first, it would get overwritten by the smaller ones

    another option is to add maximum widths to the media queries
*/

@media all and (min-width: 500px){
    #items{
        grid-template-columns: 1fr 1fr;
    }

    #text{
        width: 50%;
    }
}


@media all and (min-width: 768px){
    #items{
        grid-template-columns: 1fr 1fr 1fr;
    }
}

@media all and (min-width: 1024px){
    #items{
        grid-template-columns: 1fr 1fr 1fr 1fr;
    }
}

/* property-based media queries */
@media all and (hover:hover){
    button:hover{
        background-color: black;
        color: white;
        transition: all 0.7s;
    }
}